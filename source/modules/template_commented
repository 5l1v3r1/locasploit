#!/usr/bin/env python
#from source.lib.include import *
#from source.lib.parameters import *
from _generic_plugin import *

class Module(GenericModule):
	def __init__(self):
		self.authors = [
			Author(name='Vitezslav Grygar', email='vitezslav.grygar@gmail.com', web='badsulog.blogspot.com'),
		]
		
		self.name = 'template'
		self.short_description = 'Serves as a module template.'
		self.references = [
			'',
		]
		
		self.date = '2016-01-25'
		self.license = 'GNU GPLv2'
		self.version = '1.0'
		self.tags = [
			'template',
		]
		
		self.description = 'This module is designed to be used as a template for new modules. For help, please check template_commented module.'
		self.kb_access = [
			#DISTRIBUTION,
			#USERS,
		]
		self.dependencies = {
			#linux.enumeration.distribution,
		}
		self.changelog = ''
		self.ResetParameters()

	def ResetParameters(self):
		self.parameters = {
			#'FILE': Parameter(value='/etc/passwd', mandatory=True, description='File to parse'),
		}

	def Check(self):
		log.info('This module does not support check.')
	
	def Run(self):
		self.kb_init()

		# # # # # # # #
		log.ok('Template module says: "Hello World!"')
		# # # # # # # #
		pass
	

lib.module_objects.append(Module())
